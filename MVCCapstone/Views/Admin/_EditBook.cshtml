@model MVCCapstone.Models.EditBookModel
@{
    var GenreSelected = new List<int>();

    GenreSelected = Model.BookGenre as List<int>;
    
}
<div class="row">
    <p id="message"></p>
</div>


@if (Model.displayEdit == true)
{
    using (Ajax.BeginForm("edit", null, new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "message", OnSuccess = "scrollToTop" }, new { @class = "form-horizontal", @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
            
            
        @Html.HiddenFor(m => m.isStandalone)

        if (Model.isStandalone == true)
        { 
        
        <div class="form-group">
            @Html.LabelFor(m => m.ForumAction, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-3">
                @Html.RadioButtonFor(m => m.ForumAction, "Remain", new {@checked = "checked", @onClick = "hideForumTitleSection()"}) Standalone <br />
                @Html.RadioButtonFor(m => m.ForumAction, "Join", new { @onClick = "showForumSection()"}) Join An Existing Series <br />
                @Html.RadioButtonFor(m => m.ForumAction, "Convert", new { @onClick = "showTitleSection()" }) Convert To A New Series
            </div>
            <div class="col-sm-7">
                This book is currently a <strong>standalone</strong>
            </div>
        </div>   
        } 
        else 
        {
        <div class="form-group">
            @Html.LabelFor(m => m.ForumAction, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-3">
                @Html.RadioButtonFor(m => m.ForumAction, "Standalone", new {@onClick = "hideForumTitleSection()"}) Convert To Standalone <br />
                @Html.RadioButtonFor(m => m.ForumAction, "Remain", new {@checked = "checked", @onClick = "hideForumTitleSection()"}) Remain In Current Series <br />
                @Html.RadioButtonFor(m => m.ForumAction, "Join", new { @onClick = "showForumSection()"}) Join Another Series <br />
                @Html.RadioButtonFor(m => m.ForumAction, "Convert", new { @onClick = "showTitleSection()" }) Convert To A New Series
            </div>
            <div class="col-sm-7">
                This book is currently part of the series <strong>@Model.SeriesTitleDisplay</strong>
            </div>
        </div>   
        }
        
        <div style="display:none" id="ForumIdSection" class="col-sm-offset-1">
            <div class="form-group">
                @Html.LabelFor(m => m.ForumId, new { @class = "col-sm-2 control-label" })
                @Html.TextBoxFor(m => m.ForumId, new { @class = "col-sm-2", placeholder = "Series Id" })
                @Html.ValidationMessageFor(m => m.ForumId, "", new { @class = "col-sm-4" }) 

            </div>
            <div class="form-group">
                @Html.Label(" ", new { @class = "col-sm-2 control-label" })
                <input class="col-sm-2 btn btn-primary" id="searchSeriesButton" type="button" value="Search" data-toggle="modal" data-target="#ForumIdSearch"/>
            </div>
        </div>
        
        <div style="display:none" id="TitleSection" class="col-sm-offset-1">
        <div class="form-group">
                @Html.LabelFor(m => m.SeriesTitle, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.SeriesTitle, new { placeholder = "Title of New Series" })
                </div>
                <div class="col-sm-4">
                        @Html.ValidationMessageFor(m => m.SeriesTitle)
                </div>
            </div>
        </div>
    
    
        <div class="form-group">
            @Html.LabelFor(m => m.BookTitle, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.BookTitle, new { placeholder = "Title of Book" })
            </div>
            <div class="col-sm-4">
                    @Html.ValidationMessageFor(m => m.BookTitle)
            </div>
        </div>
    
        <div class="form-group">
                @Html.LabelFor(m => m.Author  , new { @class = "col-sm-2 control-label" })
            <div class="col-sm-6">
                @Html.TextBoxFor(m => m.Author, new { placeholder = "First Last Name" })
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(m => m.Author)
            </div>
        </div>
    
        <div class="form-group">
                @Html.LabelFor(m => m.Synopsis, new { @class = "col-sm-2 control-label" })
            <div class="col-sm-6">
                @Html.TextAreaFor(m => m.Synopsis, new { placeholder = "Synopsis of Book", rows = 3, columns = 40 })
            </div>
        </div>
    
        <div class="form-group">
                @Html.LabelFor(m => m.Publisher  , new { @class = "col-sm-2 control-label" })
            <div class="col-sm-6">
                @Html.TextBoxFor(m => m.Publisher, new { placeholder = "Publisher of Book" })
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(m => m.Publisher)
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(m => m.Published  , new { @class = "col-sm-2 control-label" })
            <div class="col-sm-6">
                @Html.TextBoxFor(m => m.Published, "{0:dd/MM/yyyy}", new { placeholder = "dd/mm/yyyy" })
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(m => m.Published) 
            </div>
        </div>
    
        <div class="form-group">
            @Html.Label("Genre", new { @class = "col-sm-2 control-label" })
            <div class="col-sm-8">
            @Html.CheckBoxListFor(m => m.PostedGenres.GenreId,
                    m => m.AvaialbleGenres,
                    m => m.GenreId,
                    m => m.Genre,
                    m => GenreSelected.Contains(m.GenreId),
                    new MvcCheckBoxList.Model.HtmlListInfo(MvcCheckBoxList.Model.HtmlTag.vertical_columns, 4, new { @class = "col-md-3" }, MvcCheckBoxList.Model.TextLayout.RightToLeft))
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(m => m.ISBN  , new { @class = "col-sm-2 control-label" })
            <div class="col-sm-6">
                @Html.TextBoxFor(m => m.ISBN, new { placeholder = "10 or 13 digits" })
            </div>
            <div class="col-sm-4">
                @Html.ValidationMessageFor(m => m.ISBN) 
            </div>
        </div>
    
        <div class="form-group">
            @Html.LabelFor(m => m.Language, new {@class="col-sm-2 control-label" })
            <div class="col-sm-8">
                @Html.DropDownListFor(m => m.LanguageDisplay, Model.Language, new { @class = "col-sm-3" })  
            </div>
        </div>
        
        <div class="form-group">
            @Html.Label(" ", new {@class="col-sm-2 control-label" })
            <div class="col-sm-8">
                <input type="submit" class="col-sm-2 btn btn-primary" value="Edit Book" />
            </div>
        </div>
    }

}
else
{
   <h3>The book was not found in the database.</h3>
}

<script>
    // required for partial forms
    $.validator.unobtrusive.parse("form");
</script>


@Html.Partial("_ModalSeriesSearch");

